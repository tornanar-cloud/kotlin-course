package ru.stimmax.lessons.lesson07.homework

fun main() {

    //1. Напишите цикл for, который выводит числа от 1 до 5.
    println("//1. Напишите цикл for, который выводит числа от 1 до 5. - ")
    for (x in 1 until 5) {
        print("$x ")
    }
    println()
    //2. Напишите цикл for, который выводит четные числа от 1 до 10.
    println("//2. Напишите цикл for, который выводит четные числа от 1 до 10. - ")
    for (x in 1 until 10) {
        if (x % 2 == 0) {
            print("$x ")
        }
    }
    println()

    //3. Создайте цикл for, который выводит числа от 5 до 1.
    print("//3. Создайте цикл for, который выводит числа от 5 до 1. - ")
    for (x in 5 downTo 2) {
        print("$x ")
    }
    println()
    //4. Создайте цикл for, который выводит числа от 10 до 1, уменьшая их на 2.
    println("//4. Создайте цикл for, который выводит числа от 10 до 1, уменьшая их на 2. - ")
    for (x in 10 downTo 2) {
        print(x-2)
    }
    println()
    //5. Используйте цикл for с шагом 2 для вывода чисел от 1 до 9.
    println("//5.  Используйте цикл for с шагом 2 для вывода чисел от 1 до 9. - ")
    for (x in 1 until 9 step 2) {
        print("$x ")
    }
    println()
    //6.1 Напишите цикл for, который выводит каждое третье число в диапазоне от 1 до 20.
    println("//6.1 Напишите цикл for, который выводит каждое третье число в диапазоне от 1 до 20.")
    for (x in 1 until 20) {
        if (x % 3 == 0) print("$x ")
    }
    println()
    //6.2 Создайте числовую переменную 'size'. Используйте цикл for с шагом 2 для вывода чисел от 3 до size не включая size.
    println("//6.2 Создайте числовую переменную 'size'. Используйте цикл for с шагом 2 для вывода чисел от 3 до size не включая size.")
    val size: Int = 35
    for (x in 3 until size step 2) {
        print("$x ")
    }
    println()

    //7. Создайте цикл while, который выводит квадраты чисел от 1 до 5.
    println("//7. Создайте цикл while, который выводит квадраты чисел от 1 до 5.")
    var v: Int = 1
    while (v < 5) {
        print(v * v)
        print(" ")
        v++
    }
    println()

    //8.1 Напишите цикл while, который уменьшает число от 10 до 5. После этого вывести результат в консоль
    println("//8. Напишите цикл while, который уменьшает число от 10 до 5. После этого вывести результат в консоль")
    var v1: Int = 10
    while (v1 > 5) {
        v1 -= 1
    }
    println(v1)

    //8.2 Используйте цикл do while, чтобы вывести числа от 5 до 1.
    println("//8.2 Используйте цикл do while, чтобы вывести числа от 5 до 1.")
    var v2: Int = 5
    do {
        print("$v2 ")
        v2 -= 1
    } while (v2 > 1)
    println()


    //9. Создайте цикл do while, который повторяется, пока счетчик меньше 10, начиная с 5.
    println("//9. Создайте цикл do while, который повторяется, пока счетчик меньше 10, начиная с 5.")
    var v3: Int = 5
    do {
        println("Повторяю, счетчик v3 - $v3")
        v3 += 1
    } while (v3 < 10)
    println()

    //10. Напишите цикл for от 1 до 10 и используйте break, чтобы выйти из цикла при достижении 6.
    println("//10. Напишите цикл for от 1 до 10 и используйте break, чтобы выйти из цикла при достижении 6.")
    for (x in 1 until 10) {
        if (x == 6) {
            println("X равен $x, я выхожу!!!"); break
        }
    }

    //11. Создайте цикл while, который бесконечно выводит числа, начиная с 1, но прерывается при достижении 10.
    println("//11. Создайте цикл while, который бесконечно выводит числа, начиная с 1, но прерывается при достижении 10.")
    var v4: Int = 1
    while (true) {
        if (v4 == 10) {
            println("v4 равен - $v4, я выхожу"); break
        }
        v4++
    }

    //12. В цикле for от 1 до 10 используйте continue, чтобы пропустить четные числа.
    println("//12. В цикле for от 1 до 10 используйте continue, чтобы пропустить четные числа.")
    for (x in 1..10) {
        if (x % 2 == 0) continue
        print("$x ")
    }
    println()
    //13. Напишите цикл while, который выводит числа от 1 до 10, но пропускает числа, кратные 3.

    println("//13. Напишите цикл while, который выводит числа от 1 до 10, но пропускает числа, кратные 3.")
    var v5: Int = 1
    while (v5++ < 10) {
        if (v5 % 3 == 0) {
            continue
        }
        print("$v5 ")

    }
    println()
    println()
    println()

    //Отдельная домашка
    //1. Используя вложенный цикл реализовать таблицу умножения, как на картинке.
    println("//1. Используя вложенный цикл реализовать таблицу умножения, как на картинке.")
    for (x in 1..9) {
        for (y in 1..9) {
            print(x * y)
            print(" ")
        }
        println()
    }
    println()
    println()
//2. Напишите функцию, которая суммирует числа от 1 до 'arg' с помощью цикла for. 'arg' - целочисленный аргумент функции
    println("//2. Напишите функцию, которая суммирует числа от 1 до 'arg' с помощью цикла for. 'arg' - целочисленный аргумент функции")
    print(sumAccumulator(5))
    println()
//3. Напишите функцию, которая вычисляет факториал числа 'arg' с использованием цикла while.
    println("3. Напишите функцию, которая вычисляет факториал числа 'arg' с использованием цикла while.")
    println(getFactorial(5))
    println()

//4. Напишите функцию, которая находит сумму всех четных чисел от 2 до 'arg', используя цикл while.
    println("//4. Напишите функцию, которая находит сумму всех четных чисел от 2 до 'arg', используя цикл while.")
    println(sumEvenNumbers(20))
    println()
    //5 Напишите функцию, которая используя вложенные циклы while, выведет заполненный прямоугольник размером 5x3 из символов *.
    println("//5 Напишите функцию, которая используя вложенные циклы while, выведет заполненный прямоугольник размером 5x3 из символов *.")
    rectangle5x3()
    println()
//6. Напишите функцию, которая используя цикл for найдёт суммы чётных и нечётных значений чисел от 1 до arg.
    println("//6. Напишите функцию, которая используя цикл for найдёт суммы чётных и нечётных значений чисел от 1 до arg.")
    sumEvenAndTotEvenNumber(13)
}


//2. Напишите функцию, которая суммирует числа от 1 до 'arg' с помощью цикла for. 'arg' - целочисленный аргумент функции.

fun sumAccumulator(arg: Int): Int {
    var sum = 0
    for (x in 1..arg) {
        sum += x
    }
    return sum
}

//3. Напишите функцию, которая вычисляет факториал числа 'arg' с использованием цикла while.
fun getFactorial(arg: Int): Int {
    var result: Int = 1
    var counter: Int = arg
    while (counter > 1) {
        result *= counter
        counter--
    }

    return result
}

//4. Напишите функцию, которая находит сумму всех четных чисел от 2 до 'arg', используя цикл while.
fun sumEvenNumbers(arg: Int): Int {
    var result = 0
    var counter = 1
    while (counter < arg) {
        if (counter % 2 == 0) {
            result += counter
        }
        counter++
    }
    return result
}

//5 Напишите функцию, которая используя вложенные циклы while, выведет заполненный прямоугольник размером 5x3 из символов *.
fun rectangle5x3() {

    var x: Int = 1
    var y: Int = 1
    while (y < 4) {
        while (x < 6) {
            print("*")
            x++
        }
        x = 1
        println()
        y++
    }


}

//6. Напишите функцию, которая используя цикл for найдёт суммы чётных и нечётных значений чисел от 1 до arg.
fun sumEvenAndTotEvenNumber(arg: Int) {
    var evenRes: Int = 0
    var notEvenRes: Int = 0
    for (x in 1..arg) {
        if (x % 2 != 0) {
            notEvenRes += x
        } else evenRes += x
    }
    println("Сумма четных чисел - $evenRes \nСумма нечетных чисел - $notEvenRes")
}