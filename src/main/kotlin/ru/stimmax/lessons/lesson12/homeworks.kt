package ru.stimmax.lessons.lesson12

fun main() {
    //Задачи на приведение коллекции к значению
    //1. Проверить, что размер коллекции больше 5 элементов.
    var l1 = listOf<Int>(10, 20, 33, 44, 55, 66, 78)
    println(l1.size > 5)

    //2. Проверить, что коллекция пустая
    println(l1.isEmpty())

    //3. Проверить, что коллекция не пустая
    println(l1.isNotEmpty())

    //4. Взять элемент по индексу или создать значение если индекса не существует
    println(l1.getOrElse(2) { -100 })
    println(l1.getOrElse(210) { -100 })

    //5. Собрать коллекцию в строку
    println(l1.joinToString(" --> "))

    //6. Посчитать сумму всех значений
    println(l1.sum())

    //7. Посчитать среднее
    println(l1.average())

    //8. Взять максимальное число
    println(l1.max())

    //9. Взять минимальное число
    println(l1.min())

    //10. Взять первое число или null
    println(l1.firstOrNull())

    //11. Проверить что коллекция содержит элемент
    println(l1.contains(44))


    //Задачи на обработку коллекций
    //12. Отфильтровать коллекцию по диапазону 18-30
    var a = 0
    var ar = List(50) { ++a }
    println(ar.filter { it in 18..30 })
    //println(ar::class)
    //println(ar)

    //13. Выбрать числа, которые не делятся на 2 и 3 одновременно
    println(ar.filterNot { (it % 2 == 0 && it % 3 == 0) })

    //14. Очистить текстовую коллекцию от null элементов
    val l2 = listOf<String?>("Privet", null, "world", null, "kotlin")
    println(l2.filterNotNull())

    //15. Преобразовать текстовую коллекцию в коллекцию длин слов
    val l3 = listOf<String>(
        "В этом мире",
        "я гость непрошенный",
        "отовсюду здесь",
        "веет холодом",
        "не потерянный, но заброшенный"
    )
    println(l3.map { it.length })

    //16. Преобразовать текстовую коллекцию в мапу, где ключи - перевёрнутые слова, а значения - длина слов
    println(l3.associate { it.reversed() to it.length })

    //17. Отсортировать список в алфавитном порядке
    val l4 = setOf<Char>('d', 'b', 'c', 'g', 'a')
    println(l4.sorted())
    println()

    //18. Взять первые 3 элемента списка
    println(l4.take(3))

    //19. Распечатать квадраты элементов списка
    val l5 = listOf<Int>(2, 3, 4, 5, 6)
    l5.forEach { print("${it * it} ") }
    //20. Группировать список по первой букве слов
    val l6 = listOf<String>("Hello", "Ahaa", "Helga", "Danger")
    val m7 = l6.groupBy { it.first() }
    println(m7)
    //21. Очистить список от дублей
    val l8 = listOf<String>(
        "Hello",
        "Ahaa",
        "Helga",
        "Danger",
        "Hello",
        "Ahaa",
        "Helga",
        "Danger",
        "Hello",
        "Ahaa",
        "Helga",
        "Danger"
    )
    println(l8.distinct())

    //22. Отсортировать список по убыванию
    val l9 = listOf<Int>(2, 3, 4, 5, 6)
    println(l9.sortedDescending())

    //23.  Взять последние 3 элемента списка
    val l10 = listOf<Int>(2, 3, 4, 5, 6, 7, 8, 9, 0)
    println(l10.takeLast(3))


    //24. Задача 24. Характеристика числовой коллекции
    /*
Напиши функцию, которая принимает коллекцию чисел и возвращает строку с характеристикой коллекции используя конструкцию when

Если коллекция пустая - “Пусто”
Если количество элементов меньше пяти - “Короткая”
Если коллекция начинается с 0 - “Стартовая”
Если сумма всех чисел больше 10000 - “Массивная”
Если среднее значение равно 10 - “Сбалансированная”
Если длина строки образованная склеиванием коллекции в строку равна 20 - “Клейкая”
Если максимальное число меньше -10 - “Отрицательная”
Если минимальное число больше 1000 - “Положительная”
Если содержит одновременно числа 3 и 14 - “Пи***тая”
Иначе - “Уникальная”
 */
    println(task24(listOf()))
    println(task24(listOf(1, 2, 3, 4)))
    println(task24(listOf(0, 2, 3, 4)))
    println(task24(listOf(1, 2, 3, 4, 10000)))
    println(task24(listOf(2, 18)))
    println(task24(List(20) { 1 }))
    println(task24(listOf(-11, -15, -22, -100, 50)))
    println(listOf<Int>(1000, 2000, 3000, 4000))
    println(listOf<Int>(3, 14, 5, 22, 66))


    //Задача 25. Анализ учебных оценок
    val grades = listOf(85, 58, 90, 74, 88, 67, 95, 92, 50, 42, 12)
    //Задача 25. Анализ учебных оценок
    /*
    Напиши функцию, которая принимает список чисел и возвращает список чисел.
Пример данных: val grades = listOf(85, 58, 90, 74, 88, 67, 95, 92, 50, 42, 12)
Цель: Отфильтровать удовлетворительные оценки (>=60), отсортировать оставшиеся по возрастанию и взять первые 3.
Вызывай методы обработки и фильтрации последовательно один из другого, чтобы результат предыдущего метода являлся основой для следующего.
     */
    println(task25(grades))

    /*
Задача 26. Создание каталога по первой букве
Напиши функцию, которая принимает список строк и возвращает словарь с ключом - буквой и значением - строкой.
Начальные значения:
Цель: Привести все слова в списке к нижнему регистру, сгруппировать в каталог по первой букве используя метод groupBy
 */
    val list = listOf(
        "Стол",
        "табурет",
        "ваза",
        "Кружка",
        "Зеркало",
        "ковер",
        "Шкаф",
        "часы",
        "Люстра",
        "подушка",
        "Картина",
        "столик",
        "Вазон",
        "шторы",
        "Пуф",
        "книга",
        "Фоторамка",
        "светильник",
        "Коврик",
        "вешалка",
        "Подставка",
        "телевизор",
        "Комод",
        "полка",
        "Абажур",
        "диван",
        "Кресло",
        "занавеска",
        "Бра",
        "пепельница",
        "Глобус",
        "статуэтка",
        "Поднос",
        "фигурка",
        "Ключница",
        "плед",
        "Тумба",
        "игрушка",
        "Настенные часы",
        "подсвечник",
        "Журнальный столик",
        "сувенир",
        "Корзина для белья",
        "посуда",
        "Настольная лампа",
        "торшер",
        "Этажерка"
    )

    println(task26(list))
    /*
    Задание 27. Подсчёт средней длины слов в списке
    Напиши функцию, которая принимает список строк и возвращает строку.
    Начальные значения взять из предыдущей задачи.
    Цель: Перевести все слова в количество букв, подсчитать среднее значение.
    Вернуть форматированный текст с двумя знаками после запятой, используя функцию format и подходящий шаблон.
     */
    println(task27(list))

    /*
    Задание 28: Категоризация чисел
    Напиши функцию, которая принимает список чисел и возвращает словарь с ключами - строками и значениями - числами.
    Начальные значения: val numbers = listOf(1, 3, 5, 7, 3, 1, 8, 9, 9, 7)
    Цель: Отобрать уникальные числа, отсортировать по убыванию и сгруппировать по четности (“четные” и “нечетные”).
     */
    val numbers = listOf(1, 3, 5, 7, 3, 1, 8, 9, 9, 7)
    println(task28(numbers))


    /*
 Задание 29: Поиск первого подходящего элемента
 Напиши функцию, которая принимает список чисел и число и возвращает nullable число.
 Начальные значения: val ages = listOf(22, 18, 30, 45, 17, null, 60) и число для проверки возраста, например 18.
 Цель: Найти первый возраст в списке, который соответствует условию (больше второго аргумента) и вернуть его, либо null если значения не нашлось.
  */
    val ages: List<Int?> = listOf(22, 18, 30, 45, 17, null, 60)
    println(task29(ages, 18))
    val ages1: List<Int?> = listOf(10, 18, 30, 45, 17, null, 60)
    println(task29(ages1, 18))
    val ages2: List<Int?> = listOf(10, 18, 12, 13, 4, null, 5)
    println(task29(ages2, 18))
}


//Задача 24. Характеристика числовой коллекции
/*
Напиши функцию, которая принимает коллекцию чисел и возвращает строку с характеристикой коллекции используя конструкцию when

Если коллекция пустая - “Пусто”
Если количество элементов меньше пяти - “Короткая”
Если коллекция начинается с 0 - “Стартовая”
Если сумма всех чисел больше 10000 - “Массивная”
Если среднее значение равно 10 - “Сбалансированная”
Если длина строки образованная склеиванием коллекции в строку равна 20 - “Клейкая”
Если максимальное число меньше -10 - “Отрицательная”
Если минимальное число больше 1000 - “Положительная”
Если содержит одновременно числа 3 и 14 - “Пи***тая”
Иначе - “Уникальная”
 */
fun task24(li: List<Int>): String {
    return when {
        li.isEmpty() -> "Пусто"
        li.size < 5 -> "Короткая"
        li.first() == 0 -> "Стартовая"
        li.sum() > 1000 -> "Массивная"
        li.average().toInt() == 10 -> "Сбалансированная"
        li.joinToString().length == 20 -> "Клейкая"
        li.max() < -10 -> "Отрицательная"
        li.min() > 1000 -> "Положительная"
        li.contains(3) && li.contains(14) -> "Пи***тая"
        else -> "Уникальная"
    }
}
//Задача 25. Анализ учебных оценок
/*
Напиши функцию, которая принимает список чисел и возвращает список чисел.
Пример данных: val grades = listOf(85, 58, 90, 74, 88, 67, 95, 92, 50, 42, 12)
Цель: Отфильтровать удовлетворительные оценки (>=60), отсортировать оставшиеся по возрастанию и взять первые 3.
Вызывай методы обработки и фильтрации последовательно один из другого, чтобы результат предыдущего метода являлся основой для следующего.
 */

fun task25(arg: List<Int>): List<Int> {
    return arg.filter { it >= 60 }.sorted().take(3)


}
/*
Задача 26. Создание каталога по первой букве
Напиши функцию, которая принимает список строк и возвращает словарь с ключом - буквой и значением - строкой.
Начальные значения: val list = listOf(
"Стол", "табурет", "ваза", "Кружка", "Зеркало", "ковер", "Шкаф", "часы", "Люстра", "подушка", "Картина", "столик", "Вазон", "шторы", "Пуф", "книга",
"Фоторамка", "светильник", "Коврик", "вешалка", "Подставка", "телевизор", "Комод", "полка", "Абажур", "диван", "Кресло", "занавеска", "Бра", "пепельница", "Глобус", "статуэтка", "Поднос", "фигурка",
"Ключница", "плед", "Тумба", "игрушка", "Настенные часы", "подсвечник", "Журнальный столик", "сувенир", "Корзина для белья", "посуда", "Настольная лампа", "торшер", "Этажерка"
)
Цель: Привести все слова в списке к нижнему регистру, сгруппировать в каталог по первой букве используя метод groupBy
 */

fun task26(arg: List<String>): Map<String, List<String>> {
    return arg.groupBy { it.first().lowercase() }
}


/*
Задание 27. Подсчёт средней длины слов в списке
Напиши функцию, которая принимает список строк и возвращает строку.
Начальные значения взять из предыдущей задачи.
Цель: Перевести все слова в количество букв, подсчитать среднее значение.
Вернуть форматированный текст с двумя знаками после запятой, используя функцию format и подходящий шаблон.
 */

fun task27(arg: List<String>): String {
    return "%.2f".format(arg.map { it.length.toFloat() }.average())
}

/*
Задание 28: Категоризация чисел
Напиши функцию, которая принимает список чисел и возвращает словарь с ключами - строками и значениями - числами.
Начальные значения: val numbers = listOf(1, 3, 5, 7, 3, 1, 8, 9, 9, 7)
Цель: Отобрать уникальные числа, отсортировать по убыванию и сгруппировать по четности (“четные” и “нечетные”).
 */
fun task28(arg: List<Int>): Map<String, List<Int>> {
    return arg.distinct().groupBy { if (it % 2 == 0) "Четные" else "Нечетные" }
}

/*
Задание 29: Поиск первого подходящего элемента
Напиши функцию, которая принимает список чисел и число и возвращает nullable число.
Начальные значения: val ages = listOf(22, 18, 30, 45, 17, null, 60) и число для проверки возраста, например 18.
Цель: Найти первый возраст в списке, который соответствует условию (больше второго аргумента) и вернуть его, либо null если значения не нашлось.
 */

fun task29(arg: List<Int?>, i: Int): Int? {
    return arg.getOrElse(arg.indexOfFirst { it != null && it > i }) { null }
}
