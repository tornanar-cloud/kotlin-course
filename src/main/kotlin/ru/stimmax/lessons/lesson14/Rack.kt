package ru.stimmax.lessons.lesson14

class Rack(val shelves : MutableList<Shelf>, val shelvesCount: Int ) {

    //Добавление Полки (addShelf):
    //Добавляет новую полку в стеллаж.
    //Возвращает true, если полка была успешно добавлена или false если стеллаж уже заполнен или была попытка добавить полку которая уже установлена.
    fun addShelf(sh: Shelf): Boolean{
        if(shelves.size < shelvesCount){
            shelves.add(sh)
            return true
        }
        return false
    }

    //Удаление Полки (removeShelf):
    //Принимает индекс полки для удаления.
    //Удаляет полку по указанному индексу.
    //Возвращает список предметов полки, если полка была успешно удалена или пустой список если полка не существует.

    fun removeShelf(sh: Shelf){

    }

    //Удаление Предмета (removeItem):
    //Находит и удаляет только один предмет с любой полки.
    //Возвращает true, если предмет был удален, и false, если такой предмет не найден.

    fun removeItem(){

    }

    //Проверка наличия предмета на стеллаже (containsItem):
    //Возвращает true если предмет есть на одной из полок

    fun containsItem(){

    }

    //Получение списка полок (getShelves):
    //Возвращает неизменяемый список полок

    fun getShelves(){

    }

    //Печать Содержимого (printContents):
    //Выводит в консоль информацию о каждой полке: индекс, вместимость, оставшуюся вместимость, список предметов. Информацию выводить в наглядном читаемом виде

    fun printContents(){

    }

    //Сложное удаление полки (advancedRemoveShelf):
    //Принимает индекс полки для удаления
    //Перераспределяет предметы по имеющимся полкам, начиная с самых длинных. Если очередной предмет никуда не вмещается, его нужно пропустить и попробовать разместить следующий.
    //Удаляет полку с оставшимися предметами
    //Возвращает неизменяемый список предметов, которые не удалось удалить или пустой список если полки с таким индексом нет.
    fun advancedRemoveShelf (){}
}